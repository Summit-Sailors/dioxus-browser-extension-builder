name: CI
on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - ".gitignore"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - ".gitignore"
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG: true
  ENV: Local
  SERVER_URL: http://127.0.0.1:8071
jobs:
  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential llvm

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install llvm

      - name: Install Chocolatey
        if: runner.os == 'Windows'
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install visualstudio2022buildtools llvm -y
          echo "C:\Program Files\LLVM\bin" >> $env:GITHUB_PATH

      - name: Install Rust ${{ matrix.rust }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt,clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2.7.7

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0

      - name: Install just
        uses: extractions/setup-just@v1

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --all-features

      - name: Build release
        run: cargo build --release

  build-demo:
    name: Build Demo Extension
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2.7.7

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0

      - name: Install just
        uses: extractions/setup-just@v1

      - name: Build demo extension
        run: just ext-bundle

      - name: Upload demo extension artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: demo-extension
          path: demo-extension/dist/
          retention-days: 2
